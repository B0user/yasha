{
  "info": {
    "name": "UZHNUR-PROJECT API Tests",
    "description": "Complete test collection for UZHNUR-PROJECT backend API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "leadId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has success status', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Lead - Quick Form",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"phone\": \"+79998887766\",\n  \"form_type\": \"quick\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/leads",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Response has success status', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.lead_id).to.exist;",
              "    pm.collectionVariables.set('leadId', jsonData.lead_id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Lead - Extended Form",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Иван Петров\",\n  \"phone\": \"+79771234567\",\n  \"email\": \"ivan.petrov@example.com\",\n  \"description\": \"Нужен капитальный ремонт квартиры 120 м². Включая фасадные работы и замену кровли.\",\n  \"form_type\": \"extended\",\n  \"utm\": {\n    \"source\": \"yandex\",\n    \"medium\": \"cpc\",\n    \"campaign\": \"remont_moscow_2024\",\n    \"content\": \"ad_variant_3\",\n    \"term\": \"ремонт квартиры москва\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/leads",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Lead created successfully', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.lead_id).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Invalid Phone Format",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test User\",\n  \"phone\": \"89998887766\",\n  \"form_type\": \"quick\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/leads",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test('Validation error returned', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('error');",
              "    pm.expect(jsonData.message).to.include('Validation failed');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get All Leads",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/leads",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has data array', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.data).to.be.an('array');",
              "    pm.expect(jsonData.pagination).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Leads with Filters",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/leads?form_type=extended&utm_source=yandex&page=1&limit=5",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads"],
          "query": [
            {
              "key": "form_type",
              "value": "extended"
            },
            {
              "key": "utm_source",
              "value": "yandex"
            },
            {
              "key": "page",
              "value": "1"
            },
            {
              "key": "limit",
              "value": "5"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Filtered results returned', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.pagination.per_page).to.eql(5);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Single Lead",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/leads/{{leadId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads", "{{leadId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Single lead returned', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.data).to.be.an('object');",
              "    pm.expect(jsonData.data._id).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Lead Status",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"status\": \"contacted\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/leads/{{leadId}}/status",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads", "{{leadId}}", "status"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Status updated successfully', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.data.status).to.eql('contacted');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Analytics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/leads/analytics",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads", "analytics"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Analytics data returned', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.data.summary).to.exist;",
              "    pm.expect(jsonData.data.breakdown).to.exist;",
              "    pm.expect(jsonData.data.daily_stats).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Lead",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/leads/{{leadId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "leads", "{{leadId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Lead deleted successfully', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success');",
              "    pm.expect(jsonData.message).to.include('deleted');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
